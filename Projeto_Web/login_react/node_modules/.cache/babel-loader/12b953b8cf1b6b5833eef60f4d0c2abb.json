{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport * as yup from 'yup';\nimport { Sidebar } from '../../components/Sidebar';\nimport api from '../../config/configApi';\nexport const EditSiteContContact = () => {\n  _s();\n\n  const [titleContact, setTitleContact] = useState('');\n  const [descContact, setDescContact] = useState('');\n  const [iconCompany, setIconCompany] = useState('');\n  const [titleCompany, setTitleCompany] = useState('');\n  const [descCompany, setDescCompany] = useState('');\n  const [iconAddress, setIconAddress] = useState('');\n  const [titleAddress, setTitleAddress] = useState('');\n  const [descAddresse, setDescAddresse] = useState('');\n  const [iconEmail, setIconEmail] = useState('');\n  const [titleEmail, setTitleEmail] = useState('');\n  const [descEmail, setDescEmail] = useState('');\n  const [titleForm, setTitleForm] = useState('');\n  const [status, setStatus] = useState({\n    type: '',\n    mensagem: ''\n  });\n\n  const editContContact = async e => {\n    e.preventDefault();\n    if (!(await validate())) return;\n    const headers = {\n      'headers': {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('token')\n      }\n    };\n    await api.put(\"/site-cont-contact/edit-content-contact\", {\n      title_contact: titleContact,\n      desc_contact: descContact,\n      icon_company: iconCompany,\n      title_company: titleCompany,\n      desc_company: descCompany,\n      icon_address: iconAddress,\n      title_address: titleAddress,\n      desc_address: descAddresse,\n      icon_email: iconEmail,\n      title_email: titleEmail,\n      desc_email: descEmail,\n      title_form: titleForm\n    }, headers).then(response => {\n      setStatus({\n        type: 'redSuccess',\n        mensagem: response.data.mensagem\n      });\n    }).catch(err => {\n      if (err.response) {\n        setStatus({\n          type: 'error',\n          mensagem: err.response.data.mensagem\n        });\n      } else {\n        setStatus({\n          type: 'error',\n          mensagem: 'Erro: Tente mais tarde!'\n        });\n      }\n    });\n  };\n\n  async function validate() {\n    let schema = yup.object().shape({\n      titleContact: yup.string(\"Erro: Necessário preencher o campo título!\").required(\"Erro: Necessário preencher o campo título!\"),\n      descContact: yup.string(\"Erro: Necessário preencher o campo descrição!\").required(\"Erro: Necessário preencher o campo descrição!\"),\n      iconCompany: yup.string(\"Erro: Necessário preencher o campo ícone da empresa!\").required(\"Erro: Necessário preencher o campo ícone da empresa!\"),\n      titleCompany: yup.string(\"Erro: Necessário preencher o campo título da empresa!\").required(\"Erro: Necessário preencher o campo título da empresa!\"),\n      descCompany: yup.string(\"Erro: Necessário preencher o campo descrição da empresa!\").required(\"Erro: Necessário preencher o campo descrição da empresa!\"),\n      iconAddress: yup.string(\"Erro: Necessário preencher o campo ícone do endereço!\").required(\"Erro: Necessário preencher o campo ícone do endereço!\"),\n      titleAddress: yup.string(\"Erro: Necessário preencher o campo título do endereço!\").required(\"Erro: Necessário preencher o campo título do endereço!\"),\n      descAddresse: yup.string(\"Erro: Necessário preencher o campo descrição do endereço!\").required(\"Erro: Necessário preencher o campo descrição do endereço!\"),\n      iconEmail: yup.string(\"Erro: Necessário preencher o campo ícone do e-mail!\").required(\"Erro: Necessário preencher o campo ícone do e-mail!\"),\n      titleEmail: yup.string(\"Erro: Necessário preencher o campo título do e-mail!\").required(\"Erro: Necessário preencher o campo título do e-mail!\"),\n      descEmail: yup.string(\"Erro: Necessário preencher o campo descrição do e-mail!\").required(\"Erro: Necessário preencher o campo descrição do e-mail!\"),\n      titleForm: yup.string(\"Erro: Necessário preencher o campo título do formulário!\").required(\"Erro: Necessário preencher o campo título do formulário!\")\n    });\n\n    try {\n      await schema.validate({\n        titleContact,\n        descContact,\n        iconCompany,\n        titleCompany,\n        descCompany,\n        iconAddress,\n        titleAddress,\n        descAddresse,\n        iconEmail,\n        titleEmail,\n        descEmail,\n        titleForm\n      });\n      return true;\n    } catch (err) {\n      setStatus({\n        type: 'error',\n        mensagem: err.errors\n      });\n      return false;\n    }\n  }\n\n  useEffect(() => {\n    const getHome = async () => {\n      const headers = {\n        'headers': {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + localStorage.getItem('token')\n        }\n      };\n      await api.get(\"/site-cont-contact/view-cont-contact-adm\", headers).then(response => {\n        if (response.data.dataContact) {\n          setTitleContact(response.data.dataContact.title_contact);\n          setDescContact(response.data.dataContact.desc_contact);\n          setIconCompany(response.data.dataContact.icon_company);\n          setTitleCompany(response.data.dataContact.title_company);\n          setDescCompany(response.data.dataContact.desc_company);\n          setIconAddress(response.data.dataContact.icon_address);\n          setTitleAddress(response.data.dataContact.title_address);\n          setDescAddresse(response.data.dataContact.desc_address);\n          setIconEmail(response.data.dataContact.icon_email);\n          setTitleEmail(response.data.dataContact.title_email);\n          setDescEmail(response.data.dataContact.desc_email);\n          setTitleForm(response.data.dataContact.title_form);\n        } else {\n          setStatus({\n            type: 'redWarning',\n            mensagem: \"Erro: Conteúdo da página home não encontrado!\"\n          });\n        }\n      }).catch(err => {\n        if (err.response) {\n          setStatus({\n            type: 'redWarning',\n            mensagem: err.response.data.mensagem\n          });\n        } else {\n          setStatus({\n            type: 'redWarning',\n            mensagem: \"Erro: Tente mais tarde!\"\n          });\n        }\n      });\n    };\n\n    getHome();\n  }, []);\n};\n\n_s(EditSiteContContact, \"urZmKmtonhu4g9lMHjDAMQMbVUA=\");\n\n_c = EditSiteContContact;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditSiteContContact\");","map":{"version":3,"sources":["C:/Users/marce/OneDrive/Área de Trabalho/ProjetoFinal/login_react/src/pages/EditSiteContContact/index.js"],"names":["React","useEffect","useState","Link","Redirect","yup","Sidebar","api","EditSiteContContact","titleContact","setTitleContact","descContact","setDescContact","iconCompany","setIconCompany","titleCompany","setTitleCompany","descCompany","setDescCompany","iconAddress","setIconAddress","titleAddress","setTitleAddress","descAddresse","setDescAddresse","iconEmail","setIconEmail","titleEmail","setTitleEmail","descEmail","setDescEmail","titleForm","setTitleForm","status","setStatus","type","mensagem","editContContact","e","preventDefault","validate","headers","localStorage","getItem","put","title_contact","desc_contact","icon_company","title_company","desc_company","icon_address","title_address","desc_address","icon_email","title_email","desc_email","title_form","then","response","data","catch","err","schema","object","shape","string","required","errors","getHome","get","dataContact"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport * as yup from 'yup';\r\n\r\nimport { Sidebar } from '../../components/Sidebar';\r\nimport api from '../../config/configApi';\r\n\r\nexport const EditSiteContContact = () => {\r\n\r\n    const [titleContact, setTitleContact] = useState('');\r\n    const [descContact, setDescContact] = useState('');\r\n    const [iconCompany, setIconCompany] = useState('');\r\n    const [titleCompany, setTitleCompany] = useState('');\r\n    const [descCompany, setDescCompany] = useState('');\r\n    const [iconAddress, setIconAddress] = useState('');\r\n    const [titleAddress, setTitleAddress] = useState('');\r\n    const [descAddresse, setDescAddresse] = useState('');\r\n    const [iconEmail, setIconEmail] = useState('');\r\n    const [titleEmail, setTitleEmail] = useState('');\r\n    const [descEmail, setDescEmail] = useState('');\r\n    const [titleForm, setTitleForm] = useState('');\r\n\r\n    const [status, setStatus] = useState({\r\n        type: '',\r\n        mensagem: ''\r\n    });\r\n\r\n    const editContContact = async e => {\r\n        e.preventDefault();\r\n\r\n        if (!(await validate())) return;\r\n\r\n        const headers = {\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }\r\n\r\n        await api.put(\"/site-cont-contact/edit-content-contact\", {\r\n            title_contact: titleContact,\r\n            desc_contact: descContact,\r\n            icon_company: iconCompany,\r\n            title_company: titleCompany,\r\n            desc_company: descCompany,\r\n            icon_address: iconAddress,\r\n            title_address: titleAddress,\r\n            desc_address: descAddresse,\r\n            icon_email: iconEmail,\r\n            title_email: titleEmail,\r\n            desc_email: descEmail,\r\n            title_form: titleForm\r\n        },\r\n            headers)\r\n            .then((response) => {\r\n                setStatus({\r\n                    type: 'redSuccess',\r\n                    mensagem: response.data.mensagem\r\n                });\r\n            }).catch((err) => {\r\n                if (err.response) {\r\n                    setStatus({\r\n                        type: 'error',\r\n                        mensagem: err.response.data.mensagem\r\n                    });\r\n                } else {\r\n                    setStatus({\r\n                        type: 'error',\r\n                        mensagem: 'Erro: Tente mais tarde!'\r\n                    });\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    async function validate() {\r\n        let schema = yup.object().shape({\r\n            titleContact: yup.string(\"Erro: Necessário preencher o campo título!\")\r\n                .required(\"Erro: Necessário preencher o campo título!\"),\r\n            descContact: yup.string(\"Erro: Necessário preencher o campo descrição!\")\r\n                .required(\"Erro: Necessário preencher o campo descrição!\"),\r\n            iconCompany: yup.string(\"Erro: Necessário preencher o campo ícone da empresa!\")\r\n                .required(\"Erro: Necessário preencher o campo ícone da empresa!\"),\r\n            titleCompany: yup.string(\"Erro: Necessário preencher o campo título da empresa!\")\r\n                .required(\"Erro: Necessário preencher o campo título da empresa!\"),\r\n            descCompany: yup.string(\"Erro: Necessário preencher o campo descrição da empresa!\")\r\n                .required(\"Erro: Necessário preencher o campo descrição da empresa!\"),\r\n            iconAddress: yup.string(\"Erro: Necessário preencher o campo ícone do endereço!\")\r\n                .required(\"Erro: Necessário preencher o campo ícone do endereço!\"),\r\n            titleAddress: yup.string(\"Erro: Necessário preencher o campo título do endereço!\")\r\n                .required(\"Erro: Necessário preencher o campo título do endereço!\"),\r\n            descAddresse: yup.string(\"Erro: Necessário preencher o campo descrição do endereço!\")\r\n                .required(\"Erro: Necessário preencher o campo descrição do endereço!\"),\r\n            iconEmail: yup.string(\"Erro: Necessário preencher o campo ícone do e-mail!\")\r\n                .required(\"Erro: Necessário preencher o campo ícone do e-mail!\"),\r\n            titleEmail: yup.string(\"Erro: Necessário preencher o campo título do e-mail!\")\r\n                .required(\"Erro: Necessário preencher o campo título do e-mail!\"),\r\n            descEmail: yup.string(\"Erro: Necessário preencher o campo descrição do e-mail!\")\r\n                .required(\"Erro: Necessário preencher o campo descrição do e-mail!\"),\r\n            titleForm: yup.string(\"Erro: Necessário preencher o campo título do formulário!\")\r\n                .required(\"Erro: Necessário preencher o campo título do formulário!\")\r\n        });\r\n\r\n        try {\r\n            await schema.validate({\r\n                titleContact,\r\n                descContact,\r\n                iconCompany,\r\n                titleCompany,\r\n                descCompany,\r\n                iconAddress,\r\n                titleAddress,\r\n                descAddresse,\r\n                iconEmail,\r\n                titleEmail,\r\n                descEmail,\r\n                titleForm\r\n            });\r\n            return true;\r\n        } catch (err) {\r\n            setStatus({ type: 'error', mensagem: err.errors });\r\n            return false;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getHome = async () => {\r\n\r\n            const headers = {\r\n                'headers': {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            }\r\n\r\n            await api.get(\"/site-cont-contact/view-cont-contact-adm\", headers)\r\n                .then((response) => {\r\n                    if (response.data.dataContact) {\r\n                        setTitleContact(response.data.dataContact.title_contact);\r\n                        setDescContact(response.data.dataContact.desc_contact);\r\n                        setIconCompany(response.data.dataContact.icon_company);\r\n                        setTitleCompany(response.data.dataContact.title_company);\r\n                        setDescCompany(response.data.dataContact.desc_company);\r\n                        setIconAddress(response.data.dataContact.icon_address);\r\n                        setTitleAddress(response.data.dataContact.title_address);\r\n                        setDescAddresse(response.data.dataContact.desc_address);\r\n                        setIconEmail(response.data.dataContact.icon_email);\r\n                        setTitleEmail(response.data.dataContact.title_email);\r\n                        setDescEmail(response.data.dataContact.desc_email);\r\n                        setTitleForm(response.data.dataContact.title_form);\r\n\r\n                    } else {\r\n                        setStatus({\r\n                            type: 'redWarning',\r\n                            mensagem: \"Erro: Conteúdo da página home não encontrado!\"\r\n                        });\r\n                    }\r\n\r\n                }).catch((err) => {\r\n                    if (err.response) {\r\n                        setStatus({\r\n                            type: 'redWarning',\r\n                            mensagem: err.response.data.mensagem\r\n                        });\r\n                    } else {\r\n                        setStatus({\r\n                            type: 'redWarning',\r\n                            mensagem: \"Erro: Tente mais tarde!\"\r\n                        });\r\n                    }\r\n                })\r\n        }\r\n\r\n        getHome();\r\n    }, []);\r\n\r\n   \r\n}"]},"metadata":{},"sourceType":"module"}
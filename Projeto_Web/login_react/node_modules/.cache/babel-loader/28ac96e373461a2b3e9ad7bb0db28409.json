{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport * as yup from 'yup';\nimport { Sidebar } from '../../components/Sidebar';\nimport api from '../../config/configApi';\nexport const EditProfile = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [status, setStatus] = useState({\n    type: '',\n    mensagem: ''\n  });\n\n  const editUser = async e => {\n    e.preventDefault();\n    if (!(await validate())) return;\n    const headers = {\n      'headers': {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('token')\n      }\n    };\n    await api.put(\"/profile/edit-profile\", {\n      name,\n      email\n    }, headers).then(response => {\n      localStorage.setItem('name', name);\n      setStatus({\n        type: 'redSuccess',\n        mensagem: response.data.mensagem\n      });\n    }).catch(err => {\n      if (err.response) {\n        setStatus({\n          type: 'error',\n          mensagem: err.response.data.mensagem\n        });\n      } else {\n        setStatus({\n          type: 'error',\n          mensagem: 'Erro: Tente mais tarde!'\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    const getUser = async () => {\n      const headers = {\n        'headers': {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + localStorage.getItem('token')\n        }\n      };\n      await api.get(\"/profile/view-profile\", headers).then(response => {\n        if (response.data.user) {\n          setName(response.data.user.name);\n          setEmail(response.data.user.email);\n        } else {\n          setStatus({\n            type: 'redWarning',\n            mensagem: \"Erro: Usuário não encontrado!\"\n          });\n        }\n      }).catch(err => {\n        if (err.response) {\n          setStatus({\n            type: 'redWarning',\n            mensagem: err.response.data.mensagem\n          });\n        } else {\n          setStatus({\n            type: 'redWarning',\n            mensagem: \"Erro: Tente mais tarde!\"\n          });\n        }\n      });\n    };\n\n    getUser();\n  }, []);\n\n  async function validate() {\n    let schema = yup.object().shape({\n      email: yup.string(\"Erro: Necessário preencher o campo e-mail!\").email(\"Erro: Necessário preencher o campo e-mail!\").required(\"Erro: Necessário preencher o campo e-mail!\"),\n      name: yup.string(\"Erro: Necessário preencher o campo nome!\").required(\"Erro: Necessário preencher o campo nome!\")\n    });\n\n    try {\n      await schema.validate({\n        name,\n        email\n      });\n      return true;\n    } catch (err) {\n      setStatus({\n        type: 'error',\n        mensagem: err.errors\n      });\n      return false;\n    }\n  }\n};\n\n_s(EditProfile, \"zp3aLSHmHrdnCfwacc4zbm9cARA=\");\n\n_c = EditProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfile\");","map":{"version":3,"sources":["C:/Users/marce/OneDrive/Área de Trabalho/ProjetoFinal/login_react/src/pages/EditProfile/index.js"],"names":["React","useEffect","useState","Link","Redirect","yup","Sidebar","api","EditProfile","name","setName","email","setEmail","status","setStatus","type","mensagem","editUser","e","preventDefault","validate","headers","localStorage","getItem","put","then","response","setItem","data","catch","err","getUser","get","user","schema","object","shape","string","required","errors"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport * as yup from 'yup';\r\n\r\nimport { Sidebar } from '../../components/Sidebar';\r\nimport api from '../../config/configApi';\r\n\r\nexport const EditProfile = () => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n\r\n    const [status, setStatus] = useState({\r\n        type: '',\r\n        mensagem: ''\r\n    });\r\n\r\n    const editUser = async e => {\r\n        e.preventDefault();\r\n\r\n        if (!(await validate())) return;\r\n\r\n        const headers = {\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }\r\n\r\n        await api.put(\"/profile/edit-profile\", { name, email }, headers)\r\n            .then((response) => {\r\n                localStorage.setItem('name', name);\r\n                setStatus({\r\n                    type: 'redSuccess',\r\n                    mensagem: response.data.mensagem\r\n                });\r\n            }).catch((err) => {\r\n                if (err.response) {\r\n                    setStatus({\r\n                        type: 'error',\r\n                        mensagem: err.response.data.mensagem\r\n                    });\r\n                } else {\r\n                    setStatus({\r\n                        type: 'error',\r\n                        mensagem: 'Erro: Tente mais tarde!'\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getUser = async () => {\r\n\r\n            const headers = {\r\n                'headers': {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            }\r\n\r\n            await api.get(\"/profile/view-profile\", headers)\r\n                .then((response) => {\r\n                    if (response.data.user) {\r\n                        setName(response.data.user.name);\r\n                        setEmail(response.data.user.email);\r\n                    } else {\r\n                        setStatus({\r\n                            type: 'redWarning',\r\n                            mensagem: \"Erro: Usuário não encontrado!\"\r\n                        });\r\n                    }\r\n\r\n                }).catch((err) => {\r\n                    if (err.response) {\r\n                        setStatus({\r\n                            type: 'redWarning',\r\n                            mensagem: err.response.data.mensagem\r\n                        });\r\n                    } else {\r\n                        setStatus({\r\n                            type: 'redWarning',\r\n                            mensagem: \"Erro: Tente mais tarde!\"\r\n                        });\r\n                    }\r\n                })\r\n        }\r\n\r\n        getUser();\r\n    }, []);\r\n\r\n    async function validate() {\r\n        let schema = yup.object().shape({\r\n            email: yup.string(\"Erro: Necessário preencher o campo e-mail!\")\r\n                .email(\"Erro: Necessário preencher o campo e-mail!\")\r\n                .required(\"Erro: Necessário preencher o campo e-mail!\"),\r\n            name: yup.string(\"Erro: Necessário preencher o campo nome!\")\r\n                .required(\"Erro: Necessário preencher o campo nome!\")\r\n        });\r\n\r\n        try {\r\n            await schema.validate({ name, email });\r\n            return true;\r\n        } catch (err) {\r\n            setStatus({ type: 'error', mensagem: err.errors });\r\n            return false;\r\n        }\r\n    }\r\n\r\n  \r\n}"]},"metadata":{},"sourceType":"module"}
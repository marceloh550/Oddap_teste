{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport * as yup from 'yup';\nimport { Sidebar } from '../../components/Sidebar';\nimport api from '../../config/configApi';\nexport const EditProfilePassword = () => {\n  _s();\n\n  //const [name, setName] = useState('');\n  //const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [status, setStatus] = useState({\n    type: '',\n    mensagem: ''\n  });\n\n  const editUser = async e => {\n    e.preventDefault();\n    if (!(await validate())) return;\n    const headers = {\n      'headers': {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('token')\n      }\n    };\n    await api.put(\"/profile/edit-profile-password\", {\n      password\n    }, headers).then(response => {\n      setStatus({\n        type: 'redSuccess',\n        mensagem: response.data.mensagem\n      });\n    }).catch(err => {\n      if (err.response) {\n        setStatus({\n          type: 'error',\n          mensagem: err.response.data.mensagem\n        });\n      } else {\n        setStatus({\n          type: 'error',\n          mensagem: 'Erro: Tente mais tarde!'\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    const getUser = async () => {\n      const headers = {\n        'headers': {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + localStorage.getItem('token')\n        }\n      };\n      await api.get(\"/profile/view-profile\", headers).then(response => {\n        if (response.data.user) {//setName(response.data.user.name);\n          //setEmail(response.data.user.email);\n        } else {\n          setStatus({\n            type: 'redWarning',\n            mensagem: \"Erro: Usuário não encontrado!\"\n          });\n        }\n      }).catch(err => {\n        if (err.response) {\n          setStatus({\n            type: 'redWarning',\n            mensagem: err.response.data.mensagem\n          });\n        } else {\n          setStatus({\n            type: 'redWarning',\n            mensagem: \"Erro: Tente mais tarde!\"\n          });\n        }\n      });\n    };\n\n    getUser();\n  }, []);\n\n  async function validate() {\n    let schema = yup.object().shape({\n      password: yup.string(\"Erro: Necessário preencher o campo senha!\").required(\"Erro: Necessário preencher o campo senha!\").min(6, \"Erro: A senha deve ter no mínimo 6 caracteres!\")\n    });\n\n    try {\n      await schema.validate({\n        password\n      });\n      return true;\n    } catch (err) {\n      setStatus({\n        type: 'error',\n        mensagem: err.errors\n      });\n      return false;\n    }\n  }\n};\n\n_s(EditProfilePassword, \"DhDX+aD2InI2trS3/os8l9a7KmY=\");\n\n_c = EditProfilePassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePassword\");","map":{"version":3,"sources":["C:/Users/marce/OneDrive/Área de Trabalho/ProjetoFinal/login_react/src/pages/EditProfilePassword/index.js"],"names":["React","useEffect","useState","Link","Redirect","yup","Sidebar","api","EditProfilePassword","password","setPassword","status","setStatus","type","mensagem","editUser","e","preventDefault","validate","headers","localStorage","getItem","put","then","response","data","catch","err","getUser","get","user","schema","object","shape","string","required","min","errors"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport * as yup from 'yup';\r\n\r\nimport { Sidebar } from '../../components/Sidebar';\r\nimport api from '../../config/configApi';\r\n\r\nexport const EditProfilePassword = () => {\r\n\r\n    //const [name, setName] = useState('');\r\n    //const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [status, setStatus] = useState({\r\n        type: '',\r\n        mensagem: ''\r\n    });\r\n\r\n    const editUser = async e => {\r\n        e.preventDefault();\r\n\r\n        if (!(await validate())) return;\r\n\r\n        const headers = {\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }\r\n\r\n        await api.put(\"/profile/edit-profile-password\", { password }, headers)\r\n            .then((response) => {\r\n                setStatus({\r\n                    type: 'redSuccess',\r\n                    mensagem: response.data.mensagem\r\n                });\r\n            }).catch((err) => {\r\n                if (err.response) {\r\n                    setStatus({\r\n                        type: 'error',\r\n                        mensagem: err.response.data.mensagem\r\n                    });\r\n                } else {\r\n                    setStatus({\r\n                        type: 'error',\r\n                        mensagem: 'Erro: Tente mais tarde!'\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getUser = async () => {\r\n\r\n            const headers = {\r\n                'headers': {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            }\r\n\r\n            await api.get(\"/profile/view-profile\", headers)\r\n                .then((response) => {\r\n                    if (response.data.user) {\r\n                        //setName(response.data.user.name);\r\n                        //setEmail(response.data.user.email);\r\n                    } else {\r\n                        setStatus({\r\n                            type: 'redWarning',\r\n                            mensagem: \"Erro: Usuário não encontrado!\"\r\n                        });\r\n                    }\r\n\r\n                }).catch((err) => {\r\n                    if (err.response) {\r\n                        setStatus({\r\n                            type: 'redWarning',\r\n                            mensagem: err.response.data.mensagem\r\n                        });\r\n                    } else {\r\n                        setStatus({\r\n                            type: 'redWarning',\r\n                            mensagem: \"Erro: Tente mais tarde!\"\r\n                        });\r\n                    }\r\n                })\r\n        }\r\n\r\n        getUser();\r\n    }, []);\r\n\r\n    async function validate() {\r\n        let schema = yup.object().shape({\r\n            password: yup.string(\"Erro: Necessário preencher o campo senha!\")\r\n                .required(\"Erro: Necessário preencher o campo senha!\")\r\n                .min(6, \"Erro: A senha deve ter no mínimo 6 caracteres!\"),\r\n        });\r\n\r\n        try {\r\n            await schema.validate({ password, });\r\n            return true;\r\n        } catch (err) {\r\n            setStatus({ type: 'error', mensagem: err.errors });\r\n            return false;\r\n        }\r\n    }\r\n\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport * as yup from 'yup';\nimport { Sidebar } from '../../components/Sidebar';\nimport api from '../../config/configApi';\nexport const AddUser = () => {\n  _s();\n\n  const [user, setUser] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n  const [status, setStatus] = useState({\n    type: '',\n    mensagem: ''\n  });\n\n  const valueInput = e => setUser({ ...user,\n    [e.target.name]: e.target.value\n  });\n\n  const addUser = async e => {\n    e.preventDefault();\n    if (!(await validate())) return;\n    const headers = {\n      'headers': {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('token')\n      }\n    };\n    await api.post('/user/user', user, headers).then(response => {\n      setStatus({\n        type: 'success',\n        mensagem: response.data.mensagem\n      });\n    }).catch(err => {\n      if (err.response) {\n        setStatus({\n          type: 'error',\n          mensagem: err.response.data.mensagem\n        });\n      } else {\n        setStatus({\n          type: 'error',\n          mensagem: \"Erro: Tente novamente!\"\n        });\n      }\n    });\n  };\n\n  async function validate() {\n    let schema = yup.object().shape({\n      password: yup.string(\"Erro: Necessário preencher o campo senha!\").required(\"Erro: Necessário preencher o campo senha!\").min(6, \"Erro: A senha deve ter no mínimo 6 caracteres!\"),\n      email: yup.string(\"Erro: Necessário preencher o campo e-mail!\").email(\"Erro: Necessário preencher o campo e-mail!\").required(\"Erro: Necessário preencher o campo e-mail!\"),\n      name: yup.string(\"Erro: Necessário preencher o campo nome!\").required(\"Erro: Necessário preencher o campo nome!\")\n    });\n\n    try {\n      await schema.validate({\n        name: user.name,\n        email: user.email,\n        password: user.password\n      });\n      return true;\n    } catch (err) {\n      setStatus({\n        type: 'error',\n        mensagem: err.errors\n      });\n      return false;\n    }\n  }\n};\n\n_s(AddUser, \"YL54ay64qttEzw5BkuTPv7s1S3A=\");\n\n_c = AddUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"sources":["C:/Users/marce/OneDrive/Área de Trabalho/ProjetoFinal/login_react/src/pages/AddUser/index.js"],"names":["React","useState","Link","Redirect","yup","Sidebar","api","AddUser","user","setUser","name","email","password","status","setStatus","type","mensagem","valueInput","e","target","value","addUser","preventDefault","validate","headers","localStorage","getItem","post","then","response","data","catch","err","schema","object","shape","string","required","min","errors"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport * as yup from 'yup';\r\n\r\nimport { Sidebar } from '../../components/Sidebar';\r\nimport api from '../../config/configApi';\r\n\r\nexport const AddUser = () => {\r\n\r\n    const [user, setUser] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const [status, setStatus] = useState({\r\n        type: '',\r\n        mensagem: ''\r\n    });\r\n\r\n    const valueInput = e => setUser({ ...user, [e.target.name]: e.target.value });\r\n\r\n    const addUser = async e => {\r\n        e.preventDefault();\r\n\r\n        if (!(await validate())) return;\r\n\r\n        const headers = {\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        };\r\n\r\n        await api.post('/user/user', user, headers)\r\n            .then((response) => {\r\n                setStatus({\r\n                    type: 'success',\r\n                    mensagem: response.data.mensagem\r\n                });\r\n            }).catch((err) => {\r\n                if (err.response) {\r\n                    setStatus({\r\n                        type: 'error',\r\n                        mensagem: err.response.data.mensagem\r\n                    });\r\n                } else {\r\n                    setStatus({\r\n                        type: 'error',\r\n                        mensagem: \"Erro: Tente novamente!\"\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    async function validate() {\r\n        let schema = yup.object().shape({\r\n            password: yup.string(\"Erro: Necessário preencher o campo senha!\")\r\n                .required(\"Erro: Necessário preencher o campo senha!\")\r\n                .min(6, \"Erro: A senha deve ter no mínimo 6 caracteres!\"),\r\n            email: yup.string(\"Erro: Necessário preencher o campo e-mail!\")\r\n                .email(\"Erro: Necessário preencher o campo e-mail!\")\r\n                .required(\"Erro: Necessário preencher o campo e-mail!\"),\r\n            name: yup.string(\"Erro: Necessário preencher o campo nome!\")\r\n                .required(\"Erro: Necessário preencher o campo nome!\")\r\n        });\r\n\r\n        try {\r\n            await schema.validate({\r\n                name: user.name,\r\n                email: user.email,\r\n                password: user.password,\r\n            });\r\n            return true;\r\n        } catch (err) {\r\n            setStatus({\r\n                type: 'error',\r\n                mensagem: err.errors\r\n            });\r\n            return false;\r\n        }\r\n    }\r\n\r\n   \r\n};"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marce\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\ProjetoFinal\\\\login_react\\\\src\\\\pages\\\\UpdatePassword\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport * as yup from 'yup';\nimport api from '../../config/configApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UpdatePassword = props => {\n  _s();\n\n  const [key] = useState(props.match.params.key);\n  const [password, setPassword] = useState('');\n  const [status, setStatus] = useState({\n    type: '',\n    mensagem: ''\n  });\n  useEffect(() => {\n    const valKey = async () => {\n      const headers = {\n        'headers': {\n          'Content-Type': 'application/json'\n        }\n      };\n      await api.get(\"/login/val-key-recover-pass/\" + key, headers).then(response => {\n        /*setStatus({\r\n            type: 'success',\r\n            mensagem: response.data.mensagem\r\n        });*/\n      }).catch(err => {\n        if (err.response) {\n          setStatus({\n            type: 'redDanger',\n            mensagem: err.response.data.mensagem\n          });\n        } else {\n          setStatus({\n            type: 'redDanger',\n            mensagem: \"Erro: Tente mais tarde!\"\n          });\n        }\n      });\n    };\n\n    valKey();\n  }, [key]);\n\n  const updatePassword = async e => {\n    e.preventDefault();\n    if (!(await validate())) return;\n    const headers = {\n      'headers': {\n        'Content-Type': 'application/json'\n      }\n    };\n    await api.put(\"/login/update-password/\" + key, {\n      password\n    }, headers).then(response => {\n      setStatus({\n        type: 'redSuccess',\n        mensagem: response.data.mensagem\n      });\n    }).catch(err => {\n      if (err.response) {\n        setStatus({\n          type: 'error',\n          mensagem: err.response.data.mensagem\n        });\n      } else {\n        setStatus({\n          type: 'error',\n          mensagem: 'Erro: Tente mais tarde!'\n        });\n      }\n    });\n  };\n\n  async function validate() {\n    let schema = yup.object().shape({\n      password: yup.string(\"Erro: Necessário preencher o campo senha!\").required(\"Erro: Necessário preencher o campo senha!\").min(6, \"Erro: A senha deve ter no mínimo 6 caracteres!\")\n    });\n\n    try {\n      await schema.validate({\n        password\n      });\n      return true;\n    } catch (err) {\n      setStatus({\n        type: 'error',\n        mensagem: err.errors\n      });\n      return false;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-login\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrapper-login\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Editar a Senha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), status.type === 'redDanger' ? /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: '/',\n            state: {\n              type: \"error\",\n              mensagem: status.mensagem\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 52\n        }, this) : \"\", status.type === 'redSuccess' ? /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: '/',\n            state: {\n              type: \"success\",\n              mensagem: status.mensagem\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 53\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: updatePassword,\n          className: \"form-login\",\n          children: [status.type === 'error' ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"alert-danger\",\n            children: status.mensagem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 52\n          }, this) : \"\", status.type === 'success' ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"alert-success\",\n            children: status.mensagem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 54\n          }, this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-lock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              placeholder: \"Senha para acessar o sistema\",\n              autoComplete: \"on\",\n              onChange: text => setPassword(text.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row button\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"button-login\",\n              children: \"Salvar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"signup-link\",\n            children: [\"Lembrou a senha \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              className: \"link-pg-login\",\n              children: \"clique aqui\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdatePassword, \"6OREpwYBJ9ZwIL/5/GyFK1WMO3A=\");\n\n_c = UpdatePassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePassword\");","map":{"version":3,"sources":["C:/Users/marce/OneDrive/Área de Trabalho/ProjetoFinal/login_react/src/pages/UpdatePassword/index.js"],"names":["React","useEffect","useState","Redirect","Link","yup","api","UpdatePassword","props","key","match","params","password","setPassword","status","setStatus","type","mensagem","valKey","headers","get","then","response","catch","err","data","updatePassword","e","preventDefault","validate","put","schema","object","shape","string","required","min","errors","pathname","state","text","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport * as yup from 'yup';\r\nimport api from '../../config/configApi';\r\n\r\nexport const UpdatePassword = (props) => {\r\n\r\n    const [key] = useState(props.match.params.key);\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [status, setStatus] = useState({\r\n        type: '',\r\n        mensagem: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        const valKey = async () => {\r\n            const headers = {\r\n                'headers': {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n\r\n            await api.get(\"/login/val-key-recover-pass/\" + key, headers)\r\n                .then((response) => {\r\n                    /*setStatus({\r\n                        type: 'success',\r\n                        mensagem: response.data.mensagem\r\n                    });*/\r\n\r\n                }).catch((err) => {\r\n                    if (err.response) {\r\n                        setStatus({\r\n                            type: 'redDanger',\r\n                            mensagem: err.response.data.mensagem\r\n                        });\r\n                    } else {\r\n                        setStatus({\r\n                            type: 'redDanger',\r\n                            mensagem: \"Erro: Tente mais tarde!\"\r\n                        });\r\n                    }\r\n                })\r\n        }\r\n\r\n        valKey();\r\n    }, [key]);\r\n\r\n    const updatePassword = async e => {\r\n        e.preventDefault();\r\n\r\n        if (!(await validate())) return;\r\n\r\n        const headers = {\r\n            'headers': {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        await api.put(\"/login/update-password/\" + key, { password }, headers)\r\n            .then((response) => {\r\n                setStatus({\r\n                    type: 'redSuccess',\r\n                    mensagem: response.data.mensagem\r\n                });\r\n            }).catch((err) => {\r\n                if (err.response) {\r\n                    setStatus({\r\n                        type: 'error',\r\n                        mensagem: err.response.data.mensagem\r\n                    });\r\n                } else {\r\n                    setStatus({\r\n                        type: 'error',\r\n                        mensagem: 'Erro: Tente mais tarde!'\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    async function validate() {\r\n        let schema = yup.object().shape({\r\n            password: yup.string(\"Erro: Necessário preencher o campo senha!\")\r\n                .required(\"Erro: Necessário preencher o campo senha!\")\r\n                .min(6, \"Erro: A senha deve ter no mínimo 6 caracteres!\"),\r\n        });\r\n\r\n        try {\r\n            await schema.validate({ password, });\r\n            return true;\r\n        } catch (err) {\r\n            setStatus({ type: 'error', mensagem: err.errors });\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"d-flex\">\r\n            <div className=\"container-login\">\r\n                <div className=\"wrapper-login\">\r\n                    <div className=\"title\">\r\n                        <span>Editar a Senha</span>\r\n                    </div>\r\n                    {status.type === 'redDanger' ? <Redirect to={{\r\n                        pathname: '/',\r\n                        state: {\r\n                            type: \"error\",\r\n                            mensagem: status.mensagem\r\n                        }\r\n                    }} /> : \"\"}\r\n                    {status.type === 'redSuccess' ? <Redirect to={{\r\n                        pathname: '/',\r\n                        state: {\r\n                            type: \"success\",\r\n                            mensagem: status.mensagem\r\n                        }\r\n                    }} /> : \"\"}\r\n\r\n                    <form onSubmit={updatePassword} className=\"form-login\">\r\n\r\n                        {status.type === 'error' ? <p className=\"alert-danger\">{status.mensagem}</p> : \"\"}\r\n                        {status.type === 'success' ? <p className=\"alert-success\">{status.mensagem}</p> : \"\"}\r\n\r\n                        <div className=\"row\">\r\n                            <i className=\"fas fa-lock\"></i>\r\n                            <input type=\"password\" name=\"password\" placeholder=\"Senha para acessar o sistema\" autoComplete=\"on\" onChange={text => setPassword(text.target.value)} />\r\n                        </div>\r\n\r\n                        <div className=\"row button\">\r\n                            <button type=\"submit\" className=\"button-login\" >Salvar</button>\r\n                        </div>\r\n\r\n                        <div className=\"signup-link\">\r\n                            {\"Lembrou a senha \"}\r\n                            <Link to=\"/\" className=\"link-pg-login\">clique aqui</Link>\r\n                        </div>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}
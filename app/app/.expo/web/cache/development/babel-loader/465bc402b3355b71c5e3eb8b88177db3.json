{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\marce\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\730-cad-user-api\\\\app\\\\src\\\\pages\\\\AddUser\\\\index.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useNavigation } from '@react-navigation/native';\nimport { Container, LabelFormDash, InputFormDash, BtnSubmitFormDash, TxtSubmitFormDash, TitleRequired } from \"../../styles/custom_adm\";\nimport api from \"../../config/api\";\nexport default function AddUser() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var navigation = useNavigation();\n\n  var addUser = function addUser() {\n    return _regeneratorRuntime.async(function addUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(api.post('/user', {\n              name: name,\n              email: email,\n              password: password\n            }).then(function (response) {\n              Alert.alert(\"\", response.data.mensagem);\n              navigation.navigate('ListUsers');\n            }).catch(function (err) {\n              if (err.response) {\n                Alert.alert(\"\", err.response.data.mensagem.toString());\n              } else {\n                Alert.alert(\"\", \"Erro: Usuário não cadastrado com sucesso, tente mais tarde!\");\n              }\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(ScrollView, {\n    contentContainerStyle: {\n      flexGrow: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, React.createElement(LabelFormDash, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"* Nome\"), React.createElement(InputFormDash, {\n    placeholder: \"Nome completo\",\n    autoCorrect: false,\n    value: name,\n    onChangeText: function onChangeText(text) {\n      return setName(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }), React.createElement(LabelFormDash, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"* E-mail\"), React.createElement(InputFormDash, {\n    placeholder: \"Melhor e-mail\",\n    autoCorrect: false,\n    keyboardType: \"email-address\",\n    autoCapitalize: \"none\",\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }), React.createElement(LabelFormDash, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"* Senha\"), React.createElement(InputFormDash, {\n    placeholder: \"A senha deve ter no m\\xEDnimo 6 caracteres\",\n    autoCorrect: false,\n    secureTextEntry: true,\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }), React.createElement(TitleRequired, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, \"* Campo obrigat\\xF3rio\"), React.createElement(BtnSubmitFormDash, {\n    onPress: addUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, React.createElement(TxtSubmitFormDash, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, \"Cadastrar\"))));\n}","map":{"version":3,"sources":["C:/Users/marce/OneDrive/Área de Trabalho/730-cad-user-api/app/src/pages/AddUser/index.js"],"names":["React","useState","useNavigation","Container","LabelFormDash","InputFormDash","BtnSubmitFormDash","TxtSubmitFormDash","TitleRequired","api","AddUser","name","setName","email","setEmail","password","setPassword","navigation","addUser","post","then","response","Alert","alert","data","mensagem","navigate","catch","err","toString","flexGrow","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,aAAT,QAA8B,0BAA9B;AAEA,SAASC,SAAT,EAAoBC,aAApB,EAAmCC,aAAnC,EAAkDC,iBAAlD,EAAqEC,iBAArE,EAAwFC,aAAxF;AAEA,OAAOC,GAAP;AAEA,eAAe,SAASC,OAAT,GAAmB;AAE9B,kBAAwBT,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOU,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAA0BX,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOY,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgCb,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOc,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,MAAMC,UAAU,GAAGf,aAAa,EAAhC;;AAEA,MAAMgB,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACNT,GAAG,CAACU,IAAJ,CAAS,OAAT,EAAkB;AAAER,cAAAA,IAAI,EAAJA,IAAF;AAAQE,cAAAA,KAAK,EAALA,KAAR;AAAeE,cAAAA,QAAQ,EAARA;AAAf,aAAlB,EACDK,IADC,CACI,UAACC,QAAD,EAAc;AAChBC,cAAAA,KAAK,CAACC,KAAN,CAAY,EAAZ,EAAgBF,QAAQ,CAACG,IAAT,CAAcC,QAA9B;AACAR,cAAAA,UAAU,CAACS,QAAX,CAAoB,WAApB;AACH,aAJC,EAICC,KAJD,CAIO,UAACC,GAAD,EAAS;AACd,kBAAIA,GAAG,CAACP,QAAR,EAAkB;AACdC,gBAAAA,KAAK,CAACC,KAAN,CAAY,EAAZ,EAAgBK,GAAG,CAACP,QAAJ,CAAaG,IAAb,CAAkBC,QAAlB,CAA2BI,QAA3B,EAAhB;AACH,eAFD,MAEO;AACHP,gBAAAA,KAAK,CAACC,KAAN,CAAY,EAAZ,EAAgB,6DAAhB;AACH;AACJ,aAVC,CADM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAcA,SACI,oBAAC,UAAD;AAAY,IAAA,qBAAqB,EAAE;AAAEO,MAAAA,QAAQ,EAAE;AAAZ,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGI,oBAAC,aAAD;AACI,IAAA,WAAW,EAAC,eADhB;AAEI,IAAA,WAAW,EAAE,KAFjB;AAGI,IAAA,KAAK,EAAEnB,IAHX;AAII,IAAA,YAAY,EAAE,sBAAAoB,IAAI;AAAA,aAAInB,OAAO,CAACmB,IAAD,CAAX;AAAA,KAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAUI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ,EAWI,oBAAC,aAAD;AACI,IAAA,WAAW,EAAC,eADhB;AAEI,IAAA,WAAW,EAAE,KAFjB;AAGI,IAAA,YAAY,EAAC,eAHjB;AAII,IAAA,cAAc,EAAC,MAJnB;AAKI,IAAA,KAAK,EAAElB,KALX;AAMI,IAAA,YAAY,EAAE,sBAAAkB,IAAI;AAAA,aAAIjB,QAAQ,CAACiB,IAAD,CAAZ;AAAA,KANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,EAoBI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eApBJ,EAqBI,oBAAC,aAAD;AACI,IAAA,WAAW,EAAC,4CADhB;AAEI,IAAA,WAAW,EAAE,KAFjB;AAGI,IAAA,eAAe,EAAE,IAHrB;AAII,IAAA,KAAK,EAAEhB,QAJX;AAKI,IAAA,YAAY,EAAE,sBAAAgB,IAAI;AAAA,aAAIf,WAAW,CAACe,IAAD,CAAf;AAAA,KALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBJ,EA6BI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BA7BJ,EA+BI,oBAAC,iBAAD;AAAmB,IAAA,OAAO,EAAEb,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CA/BJ,CADJ,CADJ;AAwCH","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Alert, ScrollView } from \"react-native\";\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nimport { Container, LabelFormDash, InputFormDash, BtnSubmitFormDash, TxtSubmitFormDash, TitleRequired } from '../../styles/custom_adm';\r\n\r\nimport api from '../../config/api';\r\n\r\nexport default function AddUser() {\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const navigation = useNavigation();\r\n\r\n    const addUser = async () => {\r\n        await api.post('/user', { name, email, password })\r\n            .then((response) => {\r\n                Alert.alert(\"\", response.data.mensagem);\r\n                navigation.navigate('ListUsers');\r\n            }).catch((err) => {\r\n                if (err.response) {\r\n                    Alert.alert(\"\", err.response.data.mensagem.toString());\r\n                } else {\r\n                    Alert.alert(\"\", \"Erro: Usuário não cadastrado com sucesso, tente mais tarde!\");\r\n                }\r\n            });\r\n    }\r\n\r\n    return (\r\n        <ScrollView contentContainerStyle={{ flexGrow: 1 }}>\r\n            <Container>\r\n\r\n                <LabelFormDash>* Nome</LabelFormDash>\r\n                <InputFormDash\r\n                    placeholder=\"Nome completo\"\r\n                    autoCorrect={false}\r\n                    value={name}\r\n                    onChangeText={text => setName(text)}\r\n                />\r\n\r\n                <LabelFormDash>* E-mail</LabelFormDash>\r\n                <InputFormDash\r\n                    placeholder=\"Melhor e-mail\"\r\n                    autoCorrect={false}\r\n                    keyboardType=\"email-address\"\r\n                    autoCapitalize=\"none\"\r\n                    value={email}\r\n                    onChangeText={text => setEmail(text)}\r\n                />\r\n\r\n                <LabelFormDash>* Senha</LabelFormDash>\r\n                <InputFormDash\r\n                    placeholder=\"A senha deve ter no mínimo 6 caracteres\"\r\n                    autoCorrect={false}\r\n                    secureTextEntry={true}\r\n                    value={password}\r\n                    onChangeText={text => setPassword(text)}\r\n                />\r\n\r\n                <TitleRequired>* Campo obrigatório</TitleRequired>\r\n\r\n                <BtnSubmitFormDash onPress={addUser}>\r\n                    <TxtSubmitFormDash>Cadastrar</TxtSubmitFormDash>\r\n                </BtnSubmitFormDash>\r\n\r\n            </Container>\r\n        </ScrollView>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\marce\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\730-cad-user-api\\\\app\\\\src\\\\pages\\\\NewUser\\\\index.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useNavigation } from '@react-navigation/native';\nimport { ContainerLogin, Logo, ImageLogo, InputForm, BtnSubmitForm, TxtSubmitForm, LinkNewUser, LoadingArea } from \"../../styles/custom_adm\";\nimport api from \"../../config/api\";\nexport default function NewUser() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var navigation = useNavigation();\n\n  var addUser = function addUser() {\n    return _regeneratorRuntime.async(function addUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (validade()) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            setLoading(true);\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(api.post('/add-user-login', {\n              name: name,\n              email: email,\n              password: password\n            }).then(function (response) {\n              setLoading(false);\n              Alert.alert(\"\", response.data.mensagem);\n              navigation.navigate('Login');\n            }).catch(function (err) {\n              if (err.response) {\n                setLoading(false);\n                Alert.alert(\"\", err.response.data.mensagem.toString());\n              } else {\n                setLoading(false);\n                Alert.alert(\"\", \"Erro: Tente mais novamente!\");\n              }\n            }));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var validade = function validade() {\n    if (!name) {\n      Alert.alert(\"\", \"Erro: Necessário preencher o campo nome!\");\n      return false;\n    }\n\n    if (!email) {\n      Alert.alert(\"\", \"Erro: Necessário preencher o campo e-mail!\");\n      return false;\n    }\n\n    if (!password) {\n      Alert.alert(\"\", \"Erro: Necessário preencher o campo senha!\");\n      return false;\n    }\n\n    return true;\n  };\n\n  return React.createElement(ScrollView, {\n    contentContainerStyle: {\n      flexGrow: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, React.createElement(ContainerLogin, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, React.createElement(Logo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, React.createElement(ImageLogo, {\n    source: require(\"../../../assets/logo.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  })), React.createElement(InputForm, {\n    placeholder: \"Seu nome completo\",\n    value: name,\n    editable: !loading,\n    onChangeText: function onChangeText(text) {\n      return setName(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }), React.createElement(InputForm, {\n    placeholder: \"Seu melhor e-mail\",\n    autoCorrect: false,\n    value: email,\n    keyboardType: \"email-address\",\n    autoCapitalize: \"none\",\n    editable: !loading,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }), React.createElement(InputForm, {\n    placeholder: \"Senha\",\n    autoCorrect: false,\n    value: password,\n    secureTextEntry: true,\n    editable: !loading,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }), React.createElement(BtnSubmitForm, {\n    disabled: loading,\n    onPress: addUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, React.createElement(TxtSubmitForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, \"Cadastrar\")), React.createElement(LinkNewUser, {\n    onPress: function onPress() {\n      navigation.navigate('Login');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, \"Login\"), loading && React.createElement(LoadingArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"#fff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/marce/OneDrive/Área de Trabalho/730-cad-user-api/app/src/pages/NewUser/index.js"],"names":["React","useState","useNavigation","ContainerLogin","Logo","ImageLogo","InputForm","BtnSubmitForm","TxtSubmitForm","LinkNewUser","LoadingArea","api","NewUser","name","setName","email","setEmail","password","setPassword","loading","setLoading","navigation","addUser","validade","post","then","response","Alert","alert","data","mensagem","navigate","catch","err","toString","flexGrow","require","text"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Alert, ScrollView, ActivityIndicator } from \"react-native\";\r\n\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nimport { ContainerLogin, Logo, ImageLogo, InputForm, BtnSubmitForm, TxtSubmitForm, LinkNewUser, LoadingArea } from '../../styles/custom_adm';\r\n\r\nimport api from '../../config/api';\r\n\r\nexport default function NewUser() {\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const navigation = useNavigation();\r\n\r\n    const addUser = async () => {\r\n\r\n        if (!validade()) return;\r\n\r\n        setLoading(true);\r\n\r\n        await api.post('/add-user-login', { name, email, password })\r\n            .then((response) => {\r\n                setLoading(false);\r\n                Alert.alert(\"\", response.data.mensagem);\r\n                navigation.navigate('Login');\r\n            }).catch((err) => {\r\n                //console.log(err.response.data.mensagem.toString());\r\n                if (err.response) {\r\n                    setLoading(false);\r\n                    Alert.alert(\"\", err.response.data.mensagem.toString());\r\n                } else {\r\n                    setLoading(false);\r\n                    Alert.alert(\"\", \"Erro: Tente mais novamente!\");\r\n                }\r\n            });\r\n    }\r\n\r\n    const validade = () => {\r\n        if (!name) {\r\n            Alert.alert(\"\", \"Erro: Necessário preencher o campo nome!\");\r\n            return false;\r\n        }\r\n        if (!email) {\r\n            Alert.alert(\"\", \"Erro: Necessário preencher o campo e-mail!\");\r\n            return false;\r\n        }\r\n        if (!password) {\r\n            Alert.alert(\"\", \"Erro: Necessário preencher o campo senha!\");\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <ScrollView contentContainerStyle={{ flexGrow: 1 }}>\r\n            <ContainerLogin>\r\n                <Logo>\r\n                    <ImageLogo source={require('../../../assets/logo.png')} />\r\n                </Logo>\r\n\r\n                <InputForm\r\n                    placeholder=\"Seu nome completo\"\r\n                    value={name}\r\n                    editable={!loading}\r\n                    onChangeText={text => setName(text)}\r\n                />\r\n\r\n                <InputForm\r\n                    placeholder=\"Seu melhor e-mail\"\r\n                    autoCorrect={false}\r\n                    value={email}\r\n                    keyboardType=\"email-address\"\r\n                    autoCapitalize=\"none\"\r\n                    editable={!loading}\r\n                    onChangeText={text => setEmail(text)}\r\n                />\r\n\r\n                <InputForm\r\n                    placeholder=\"Senha\"\r\n                    autoCorrect={false}\r\n                    value={password}\r\n                    secureTextEntry={true}\r\n                    editable={!loading}\r\n                    onChangeText={text => setPassword(text)}\r\n                />\r\n\r\n                <BtnSubmitForm disabled={loading} onPress={addUser} >\r\n                    <TxtSubmitForm>\r\n                        Cadastrar\r\n                    </TxtSubmitForm>\r\n                </BtnSubmitForm>\r\n\r\n                <LinkNewUser onPress={() => { navigation.navigate('Login') }}>\r\n                    Login\r\n                </LinkNewUser>\r\n\r\n                {loading &&\r\n                    <LoadingArea>\r\n                        <ActivityIndicator size=\"large\" color=\"#fff\" />\r\n                    </LoadingArea>\r\n                }\r\n            </ContainerLogin>\r\n        </ScrollView>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
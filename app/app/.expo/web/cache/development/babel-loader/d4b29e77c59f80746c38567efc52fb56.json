{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\marce\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\730-cad-user-api\\\\app\\\\src\\\\routes\\\\routes.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport TabNavigator from \"./TabNavigator\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { getValToken } from \"../services/auth\";\nimport { AuthContext } from \"../contexts/auth\";\nvar Stack = createNativeStackNavigator();\nimport Login from \"../pages/Login\";\nimport NewUser from \"../pages/NewUser\";\nimport RecoverPassword from \"../pages/RecoverPassword\";\nimport VerifyKey from \"../pages/VerifyKey\";\nimport Home from \"../pages/Home\";\nimport Profile from \"../pages/Profile\";\nexport default function Routes() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      userToken = _useState2[0],\n      setUserToken = _useState2[1];\n\n  var authContext = useMemo(function () {\n    return {\n      signIn: function signIn() {\n        var valToken;\n        return _regeneratorRuntime.async(function signIn$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                valToken = AsyncStorage.getItem('@token');\n                setUserToken(valToken);\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      signOut: function signOut() {\n        return _regeneratorRuntime.async(function signOut$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                AsyncStorage.removeItem('@token');\n                AsyncStorage.removeItem('@name');\n                AsyncStorage.removeItem('@image');\n                setUserToken(null);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }\n    };\n  }, []);\n\n  var getToken = function getToken() {\n    var valToken, _valToken;\n\n    return _regeneratorRuntime.async(function getToken$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(getValToken());\n\n          case 3:\n            valToken = _context3.sent;\n\n            if (valToken !== null) {\n              _valToken = AsyncStorage.getItem('@token');\n              setUserToken(_valToken);\n            } else {\n              setUserToken(null);\n            }\n\n            _context3.next = 10;\n            break;\n\n          case 7:\n            _context3.prev = 7;\n            _context3.t0 = _context3[\"catch\"](0);\n            setUserToken(null);\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  useEffect(function () {\n    getToken();\n  }, []);\n  return React.createElement(AuthContext.Provider, {\n    value: authContext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, userToken ? React.createElement(TabNavigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }) : React.createElement(Stack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Login\",\n    component: Login,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"NewUser\",\n    component: NewUser,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"RecoverPassword\",\n    component: RecoverPassword,\n    options: {\n      headerTitle: \"Recuperar senha\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"VerifyKey\",\n    component: VerifyKey,\n    options: {\n      headerTitle: \"Verificar a chave\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/marce/OneDrive/Área de Trabalho/730-cad-user-api/app/src/routes/routes.js"],"names":["React","useEffect","useMemo","useState","NavigationContainer","createNativeStackNavigator","TabNavigator","AsyncStorage","getValToken","AuthContext","Stack","Login","NewUser","RecoverPassword","VerifyKey","Home","Profile","Routes","userToken","setUserToken","authContext","signIn","valToken","getItem","signOut","removeItem","getToken","headerShown","headerTitle"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport TabNavigator from './TabNavigator';\r\n\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { getValToken } from \"../services/auth\";\r\nimport { AuthContext } from '../contexts/auth';\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nimport Login from \"../pages/Login\";\r\nimport NewUser from \"../pages/NewUser\";\r\nimport RecoverPassword from \"../pages/RecoverPassword\";\r\nimport VerifyKey from \"../pages/VerifyKey\";\r\n\r\nimport Home from \"../pages/Home\";\r\nimport Profile from \"../pages/Profile\";\r\n\r\nexport default function Routes() {\r\n\r\n    const [userToken, setUserToken] = useState(null);\r\n\r\n    const authContext = useMemo(() => {\r\n        return {\r\n            signIn: async () => {\r\n                const valToken = AsyncStorage.getItem('@token');\r\n                setUserToken(valToken);\r\n            },\r\n            signOut: async () => {\r\n                AsyncStorage.removeItem('@token');\r\n                AsyncStorage.removeItem('@name');\r\n                AsyncStorage.removeItem('@image');\r\n                setUserToken(null);\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const getToken = async () => {\r\n        try {\r\n            const valToken = await getValToken();\r\n            if (valToken !== null) {\r\n                const valToken = AsyncStorage.getItem('@token');\r\n                setUserToken(valToken);\r\n            } else {\r\n                setUserToken(null);\r\n            }\r\n        } catch (err) {\r\n            setUserToken(null);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getToken();\r\n    }, []);\r\n\r\n    /* <Stack.Navigator>\r\n        <Stack.Screen name=\"Home\" component={Home} />\r\n        <Stack.Screen name=\"Profile\" component={Profile} />\r\n    </Stack.Navigator> */\r\n    return (\r\n        <AuthContext.Provider value={authContext}>\r\n            <NavigationContainer>\r\n                {userToken ? (\r\n                    <TabNavigator />\r\n                ) : (\r\n                    <Stack.Navigator>\r\n                        <Stack.Screen name=\"Login\" component={Login} options={{ headerShown: false }} />\r\n                        <Stack.Screen name=\"NewUser\" component={NewUser} options={{ headerShown: false }} />\r\n                        <Stack.Screen\r\n                            name=\"RecoverPassword\"\r\n                            component={RecoverPassword}\r\n                            options={{ headerTitle: \"Recuperar senha\" }} />\r\n                        <Stack.Screen\r\n                            name=\"VerifyKey\"\r\n                            component={VerifyKey}\r\n                            options={{ headerTitle: \"Verificar a chave\" }} />\r\n                    </Stack.Navigator>\r\n                )}\r\n            </NavigationContainer>\r\n        </AuthContext.Provider >\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}
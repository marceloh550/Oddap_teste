{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport api from \"../config/api\";\nexport var getValToken = function getValToken() {\n  var valueToken;\n  return _regeneratorRuntime.async(function getValToken$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(valUser());\n\n        case 2:\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('@token'));\n\n        case 4:\n          valueToken = _context.sent;\n\n          if (!(valueToken !== null)) {\n            _context.next = 9;\n            break;\n          }\n\n          return _context.abrupt(\"return\", valueToken);\n\n        case 9:\n          return _context.abrupt(\"return\", null);\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar valUser = function valUser() {\n  var valueToken, headers;\n  return _regeneratorRuntime.async(function valUser$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem('@token'));\n\n        case 2:\n          valueToken = _context2.sent;\n          headers = {\n            'headers': {\n              'Authorization': \"Bearer \" + valueToken\n            }\n          };\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(api.get('/val-token', headers).then(function (response) {\n            AsyncStorage.setItem('@name', response.data.user.name);\n            AsyncStorage.setItem('@token', response.data.token);\n          }).catch(function (err) {\n            if (err.response) {\n              AsyncStorage.removeItem('@token');\n              AsyncStorage.removeItem('@name');\n              AsyncStorage.removeItem('@image');\n            } else {\n              AsyncStorage.removeItem('@token');\n              AsyncStorage.removeItem('@name');\n              AsyncStorage.removeItem('@image');\n            }\n          }));\n\n        case 6:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["C:/Users/marce/OneDrive/Área de Trabalho/730-cad-user-api/app/src/services/auth.js"],"names":["AsyncStorage","api","getValToken","valUser","getItem","valueToken","headers","get","then","response","setItem","data","user","name","token","catch","err","removeItem"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,2CAAzB;;AAEA,OAAOC,GAAP;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACjBC,OAAO,EADU;;AAAA;AAAA;AAAA,2CAGEH,YAAY,CAACI,OAAb,CAAqB,QAArB,CAHF;;AAAA;AAGjBC,UAAAA,UAHiB;;AAAA,gBAKnBA,UAAU,KAAK,IALI;AAAA;AAAA;AAAA;;AAAA,2CAMZA,UANY;;AAAA;AAAA,2CAQZ,IARY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;;AAYP,IAAMF,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACaH,YAAY,CAACI,OAAb,CAAqB,QAArB,CADb;;AAAA;AACNC,UAAAA,UADM;AAGNC,UAAAA,OAHM,GAGI;AACZ,uBAAW;AACP,2CAA2BD;AADpB;AADC,WAHJ;AAAA;AAAA,2CASNJ,GAAG,CAACM,GAAJ,CAAQ,YAAR,EAAsBD,OAAtB,EACLE,IADK,CACA,UAACC,QAAD,EAAc;AAEhBT,YAAAA,YAAY,CAACU,OAAb,CAAqB,OAArB,EAA8BD,QAAQ,CAACE,IAAT,CAAcC,IAAd,CAAmBC,IAAjD;AACAb,YAAAA,YAAY,CAACU,OAAb,CAAqB,QAArB,EAA+BD,QAAQ,CAACE,IAAT,CAAcG,KAA7C;AACH,WALK,EAKHC,KALG,CAKG,UAACC,GAAD,EAAS;AACd,gBAAGA,GAAG,CAACP,QAAP,EAAgB;AACZT,cAAAA,YAAY,CAACiB,UAAb,CAAwB,QAAxB;AACAjB,cAAAA,YAAY,CAACiB,UAAb,CAAwB,OAAxB;AACAjB,cAAAA,YAAY,CAACiB,UAAb,CAAwB,QAAxB;AAEH,aALD,MAKK;AACDjB,cAAAA,YAAY,CAACiB,UAAb,CAAwB,QAAxB;AACAjB,cAAAA,YAAY,CAACiB,UAAb,CAAwB,OAAxB;AACAjB,cAAAA,YAAY,CAACiB,UAAb,CAAwB,QAAxB;AAEH;AAEJ,WAlBK,CATM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB","sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { Alert } from \"react-native\";\r\nimport api from '../config/api';\r\n\r\nexport const getValToken = async () => {\r\n    await valUser();\r\n\r\n    const valueToken = await AsyncStorage.getItem('@token');\r\n\r\n    if (valueToken !== null) {\r\n        return valueToken;\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\nconst valUser = async () => {\r\n    const valueToken = await AsyncStorage.getItem('@token');\r\n\r\n    const headers = {\r\n        'headers': {\r\n            'Authorization': `Bearer ${valueToken}`\r\n        }\r\n    }\r\n\r\n    await api.get('/val-token', headers)\r\n    .then((response) => {\r\n        //console.log(response);\r\n        AsyncStorage.setItem('@name', response.data.user.name);\r\n        AsyncStorage.setItem('@token', response.data.token);\r\n    }).catch((err) => {\r\n        if(err.response){\r\n            AsyncStorage.removeItem('@token');\r\n            AsyncStorage.removeItem('@name');\r\n            AsyncStorage.removeItem('@image');\r\n            //Alert.alert(\"\", err.response.data.mensagem);\r\n        }else{\r\n            AsyncStorage.removeItem('@token');\r\n            AsyncStorage.removeItem('@name');\r\n            AsyncStorage.removeItem('@image');\r\n            //Alert.alert(\"\", \"Erro: Necessário realizar o login para acessar a página!\");\r\n        }\r\n        \r\n    })\r\n}"]},"metadata":{},"sourceType":"module"}
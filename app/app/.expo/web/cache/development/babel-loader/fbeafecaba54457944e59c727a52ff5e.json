{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\marce\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\730-cad-user-api\\\\app\\\\src\\\\pages\\\\VerifyKey\\\\index.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useNavigation } from '@react-navigation/native';\nimport { ContainerLogin, Logo, ImageLogo, InputForm, BtnSubmitForm, TxtSubmitForm, LinkNewUser, LoadingArea } from \"../../styles/custom_adm\";\nimport api from \"../../config/api\";\nexport default function VerifyKey() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      recoverPasswordApp = _useState2[0],\n      setRecoverPasswordApp = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      id = _useState4[0],\n      setId = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      newPassword = _useState8[0],\n      setNewPassword = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      loading = _useState10[0],\n      setLoading = _useState10[1];\n\n  var navigation = useNavigation();\n\n  var verifyKey = function verifyKey() {\n    return _regeneratorRuntime.async(function verifyKey$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (validate()) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            setLoading(true);\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(api.get('/val-key-recover-pass-app/' + recoverPasswordApp).then(function (response) {\n              console.log(response.data);\n              setId(response.data.id);\n              setLoading(false);\n              setNewPassword(true);\n            }).catch(function (err) {\n              if (err.response) {\n                setLoading(false);\n                Alert.alert(\"\", err.response.data.mensagem);\n              } else {\n                setLoading(false);\n                Alert.alert(\"\", \"Erro: Tente mais tarde!\");\n              }\n            }));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var validate = function validate() {\n    if (!recoverPasswordApp) {\n      Alert.alert(\"\", \"Erro: Necessário preencher o campo código de verificação!\");\n      return false;\n    }\n\n    return true;\n  };\n\n  var editPassword = function editPassword() {\n    var headers;\n    return _regeneratorRuntime.async(function editPassword$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log(\"Id do usuário \" + id + \" e a senha \" + password);\n            headers = {\n              'Content-Type': 'application/json'\n            };\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(api.put('/update-password-app', {\n              id: id,\n              password: password\n            }, {\n              headers: headers\n            }).then(function (response) {\n              Alert.alert(\"\", response.data.mensagem);\n              navigation.navigate('Login');\n            }).catch(function (err) {\n              if (err.response) {\n                Alert.alert(\"\", err.response.data.mensagem.toString());\n              } else {\n                Alert.alert(\"\", \"Erro: Tente mais tarde!\");\n              }\n            }));\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(ScrollView, {\n    contentContainerStyle: {\n      flexGrow: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, React.createElement(ContainerLogin, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, React.createElement(Logo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, React.createElement(ImageLogo, {\n    source: require(\"../../../assets/logo.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  })), newPassword ? React.createElement(React.Fragment, null, React.createElement(InputForm, {\n    placeholder: \"Nova senha\",\n    autoCorrect: false,\n    value: password,\n    autoCapitalize: \"none\",\n    secureTextEntry: true,\n    editable: !loading,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }), React.createElement(BtnSubmitForm, {\n    disabled: loading,\n    onPress: editPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, React.createElement(TxtSubmitForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  }, \"Salvar\"))) : React.createElement(React.Fragment, null, React.createElement(InputForm, {\n    placeholder: \"C\\xF3digo de verifica\\xE7\\xE3o\",\n    autoCorrect: false,\n    value: recoverPasswordApp,\n    autoCapitalize: \"none\",\n    editable: !loading,\n    onChangeText: function onChangeText(text) {\n      return setRecoverPasswordApp(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }), React.createElement(BtnSubmitForm, {\n    disabled: loading,\n    onPress: verifyKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  }, React.createElement(TxtSubmitForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 29\n    }\n  }, \"Enviar\"))), React.createElement(LinkNewUser, {\n    onPress: function onPress() {\n      navigation.navigate('Login');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, \"Login\"), loading && React.createElement(LoadingArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"#fff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/marce/OneDrive/Área de Trabalho/730-cad-user-api/app/src/pages/VerifyKey/index.js"],"names":["React","useState","useNavigation","ContainerLogin","Logo","ImageLogo","InputForm","BtnSubmitForm","TxtSubmitForm","LinkNewUser","LoadingArea","api","VerifyKey","recoverPasswordApp","setRecoverPasswordApp","id","setId","password","setPassword","newPassword","setNewPassword","loading","setLoading","navigation","verifyKey","validate","get","then","response","console","log","data","catch","err","Alert","alert","mensagem","editPassword","headers","put","navigate","toString","flexGrow","require","text"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { ScrollView, Alert, ActivityIndicator } from \"react-native\";\r\n\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nimport { ContainerLogin, Logo, ImageLogo, InputForm, BtnSubmitForm, TxtSubmitForm, LinkNewUser, LoadingArea } from '../../styles/custom_adm';\r\n\r\nimport api from '../../config/api';\r\n\r\nexport default function VerifyKey() {\r\n\r\n    const [recoverPasswordApp, setRecoverPasswordApp] = useState('');\r\n    const [id, setId] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [newPassword, setNewPassword] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const navigation = useNavigation();\r\n\r\n    const verifyKey = async () => {\r\n        if (!validate()) return;\r\n\r\n        setLoading(true);\r\n\r\n        await api.get('/val-key-recover-pass-app/' + recoverPasswordApp)\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                setId(response.data.id);\r\n                setLoading(false);\r\n                setNewPassword(true);\r\n            }).catch((err) => {\r\n                if (err.response) {\r\n                    //console.log(err.response);\r\n                    setLoading(false);\r\n                    Alert.alert(\"\", err.response.data.mensagem);\r\n                } else {\r\n                    setLoading(false);\r\n                    Alert.alert(\"\", \"Erro: Tente mais tarde!\");\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    const validate = () => {\r\n        if (!recoverPasswordApp) {\r\n            Alert.alert(\"\", \"Erro: Necessário preencher o campo código de verificação!\");\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    const editPassword = async () => {\r\n        console.log(\"Id do usuário \" + id + \" e a senha \" + password);\r\n\r\n        const headers = {\r\n            'Content-Type': 'application/json'\r\n        }\r\n\r\n        await api.put('/update-password-app', {id, password}, {headers})\r\n        .then((response) => {\r\n            Alert.alert(\"\", response.data.mensagem);\r\n            navigation.navigate('Login');\r\n        }).catch((err) => {\r\n            if(err.response){\r\n                Alert.alert(\"\", err.response.data.mensagem.toString());\r\n            }else{\r\n                Alert.alert(\"\", \"Erro: Tente mais tarde!\");\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n\r\n        <ScrollView contentContainerStyle={{ flexGrow: 1 }}>\r\n            <ContainerLogin>\r\n                <Logo>\r\n                    <ImageLogo source={require('../../../assets/logo.png')} />\r\n                </Logo>\r\n\r\n                {newPassword ?\r\n                    <>\r\n                        <InputForm\r\n                            placeholder=\"Nova senha\"\r\n                            autoCorrect={false}\r\n                            value={password}\r\n                            autoCapitalize=\"none\"\r\n                            secureTextEntry={true}\r\n                            editable={!loading}\r\n                            onChangeText={text => setPassword(text)}\r\n                        />\r\n\r\n                        <BtnSubmitForm disabled={loading} onPress={editPassword} >\r\n                            <TxtSubmitForm>\r\n                                Salvar\r\n                            </TxtSubmitForm>\r\n                        </BtnSubmitForm>\r\n                    </>\r\n                    :\r\n                    <>\r\n                        <InputForm\r\n                            placeholder=\"Código de verificação\"\r\n                            autoCorrect={false}\r\n                            value={recoverPasswordApp}\r\n                            autoCapitalize=\"none\"\r\n                            editable={!loading}\r\n                            onChangeText={text => setRecoverPasswordApp(text)}\r\n                        />\r\n\r\n                        <BtnSubmitForm disabled={loading} onPress={verifyKey} >\r\n                            <TxtSubmitForm>\r\n                                Enviar\r\n                            </TxtSubmitForm>\r\n                        </BtnSubmitForm>\r\n                    </>\r\n                }\r\n\r\n\r\n                <LinkNewUser onPress={() => { navigation.navigate('Login') }}>\r\n                    Login\r\n                </LinkNewUser>\r\n\r\n                {loading &&\r\n                    <LoadingArea>\r\n                        <ActivityIndicator size=\"large\" color=\"#fff\" />\r\n                    </LoadingArea>\r\n                }\r\n            </ContainerLogin>\r\n        </ScrollView>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}
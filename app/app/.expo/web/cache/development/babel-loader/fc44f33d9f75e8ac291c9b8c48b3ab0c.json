{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\marce\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\730-cad-user-api\\\\app\\\\src\\\\pages\\\\ListUsers\\\\index.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useCallback } from \"react\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useFocusEffect } from '@react-navigation/native';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { Container, List, RowData, InfoData, ValueData, BtnView } from \"../../styles/custom_adm\";\nimport api from \"../../config/api\";\nexport default function ListUsers() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      users = _useState2[0],\n      setUsers = _useState2[1];\n\n  var navigation = useNavigation();\n\n  var getUsers = function getUsers() {\n    return _regeneratorRuntime.async(function getUsers$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(api.get(\"/users/1\").then(function (response) {\n              setUsers(response.data.users);\n            }).catch(function (err) {\n              if (err.response) {\n                Alert.alert(\"\", err.response.data.mensagem);\n              } else {\n                Alert.alert(\"\", \"Erro: Tente mais tarde!\");\n              }\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useFocusEffect(useCallback(function () {\n    getUsers();\n  }, []));\n  return React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, users.map(function (user) {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        navigation.navigate('ViewUser', {\n          userId: user.id\n        });\n      },\n      key: user.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }, React.createElement(RowData, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 29\n      }\n    }, React.createElement(InfoData, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 33\n      }\n    }, React.createElement(ValueData, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 37\n      }\n    }, user.name)), React.createElement(BtnView, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 33\n      }\n    }, React.createElement(MaterialCommunityIcons, {\n      name: \"greater-than\",\n      size: 20,\n      color: '#c0c0c0',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 37\n      }\n    }))));\n  })));\n}","map":{"version":3,"sources":["C:/Users/marce/OneDrive/Área de Trabalho/730-cad-user-api/app/src/pages/ListUsers/index.js"],"names":["React","useState","useCallback","useNavigation","useFocusEffect","MaterialCommunityIcons","Container","List","RowData","InfoData","ValueData","BtnView","api","ListUsers","users","setUsers","navigation","getUsers","get","then","response","data","catch","err","Alert","alert","mensagem","map","user","navigate","userId","id","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,cAAT,QAA+B,0BAA/B;;;AAIA,OAAOC,sBAAP;AAEA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,OAA1B,EAAmCC,QAAnC,EAA6CC,SAA7C,EAAwDC,OAAxD;AAGA,OAAOC,GAAP;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAEhC,kBAA0BZ,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOa,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAMC,UAAU,GAAGb,aAAa,EAAhC;;AAEA,MAAMc,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACPL,GAAG,CAACM,GAAJ,CAAQ,UAAR,EACDC,IADC,CACI,UAACC,QAAD,EAAc;AAChBL,cAAAA,QAAQ,CAACK,QAAQ,CAACC,IAAT,CAAcP,KAAf,CAAR;AACH,aAHC,EAGCQ,KAHD,CAGO,UAACC,GAAD,EAAS;AACd,kBAAIA,GAAG,CAACH,QAAR,EAAkB;AACdI,gBAAAA,KAAK,CAACC,KAAN,CAAY,EAAZ,EAAgBF,GAAG,CAACH,QAAJ,CAAaC,IAAb,CAAkBK,QAAlC;AACH,eAFD,MAEO;AACHF,gBAAAA,KAAK,CAACC,KAAN,CAAY,EAAZ,EAAgB,yBAAhB;AACH;AACJ,aATC,CADO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAaArB,EAAAA,cAAc,CACVF,WAAW,CAAC,YAAM;AACde,IAAAA,QAAQ;AACX,GAFU,EAER,EAFQ,CADD,CAAd;AAMA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,KAAK,CAACa,GAAN,CAAU,UAACC,IAAD,EAAU;AACjB,WACI,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EAAE,mBAAM;AAAEZ,QAAAA,UAAU,CAACa,QAAX,CAAoB,UAApB,EAAgC;AAAEC,UAAAA,MAAM,EAAEF,IAAI,CAACG;AAAf,SAAhC;AAAsD,OAAzF;AAA2F,MAAA,GAAG,EAAEH,IAAI,CAACG,EAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYH,IAAI,CAACI,IAAjB,CADJ,CADJ,EAII,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,sBAAD;AACI,MAAA,IAAI,EAAC,cADT;AAEI,MAAA,IAAI,EAAE,EAFV;AAGI,MAAA,KAAK,EAAE,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAJJ,CADJ,CADJ;AAgBH,GAjBA,CADL,CAFJ,CADJ;AA0BH","sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { useFocusEffect } from '@react-navigation/native';\r\n\r\nimport { Alert, TouchableOpacity } from \"react-native\";\r\n\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\r\n\r\nimport { Container, List, RowData, InfoData, ValueData, BtnView } from '../../styles/custom_adm';\r\n\r\n\r\nimport api from '../../config/api';\r\n\r\nexport default function ListUsers() {\r\n\r\n    const [users, setUsers] = useState([]);\r\n\r\n    const navigation = useNavigation();\r\n\r\n    const getUsers = async () => {\r\n        await api.get(\"/users/1\")\r\n            .then((response) => {\r\n                setUsers(response.data.users);\r\n            }).catch((err) => {\r\n                if (err.response) {\r\n                    Alert.alert(\"\", err.response.data.mensagem);\r\n                } else {\r\n                    Alert.alert(\"\", \"Erro: Tente mais tarde!\");\r\n                }\r\n            });\r\n    }\r\n\r\n    useFocusEffect(\r\n        useCallback(() => {\r\n            getUsers();\r\n        }, [])\r\n    );\r\n\r\n    return (\r\n        <Container>\r\n\r\n            <List>\r\n                {users.map((user) => {\r\n                    return (\r\n                        <TouchableOpacity onPress={() => { navigation.navigate('ViewUser', { userId: user.id }) }} key={user.id}>\r\n                            <RowData>\r\n                                <InfoData>\r\n                                    <ValueData>{user.name}</ValueData>\r\n                                </InfoData>\r\n                                <BtnView>\r\n\r\n                                    <MaterialCommunityIcons\r\n                                        name='greater-than'\r\n                                        size={20}\r\n                                        color={'#c0c0c0'} />\r\n                                </BtnView>\r\n                            </RowData>\r\n                        </TouchableOpacity>\r\n                    )\r\n                })}\r\n            </List>\r\n\r\n        </Container>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}